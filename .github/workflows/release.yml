name: Publish Docker Images

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

env:
  IMAGE_NAME_PREFIX: ghcr.io/collective/plone-intranet
  IMAGE_PLATFORMS: linux/amd64,linux/arm64

jobs:
  meta:
    if: github.ref_type == 'branch'
    runs-on: ubuntu-latest
    outputs:
      VOLTO_VERSION: ${{ steps.vars.outputs.VOLTO_VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set Env Vars
        id: vars
        run: |
          echo "VOLTO_VERSION=$(cat frontend/version.txt)" >> $GITHUB_OUTPUT

  release-frontend:
    runs-on: ubuntu-latest
    needs:
      - meta
    permissions:
      contents: read
      packages: write

    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.IMAGE_NAME_PREFIX }}-frontend
          labels: |
            org.label-schema.docker.cmd=docker run -d -p 3000:3000 ${{ env.IMAGE_NAME_PREFIX }}-frontend:latest
          flavor:
            latest=false
          tags: |
            type=ref,event=branch
            type=sha
            type=pep440,pattern={{version}}
            type=pep440,pattern={{major}}.{{minor}}.{{patch}}
            type=pep440,pattern={{major}}.{{minor}}
            type=pep440,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          platforms: ${{ env.IMAGE_PLATFORMS }}
          context: frontend
          file: frontend/dockerfiles/Dockerfile
          build-args: |
            VOLTO_VERSION=${{ needs.meta.outputs.VOLTO_VERSION }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  release-backend:
    runs-on: ubuntu-latest
    needs:
      - meta
    permissions:
      contents: read
      packages: write

    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.IMAGE_NAME_PREFIX }}-backend
          labels: |
            org.label-schema.docker.cmd=docker run -d -p 8080:8080 ${{ env.IMAGE_NAME_PREFIX }}-backend:latest
          flavor:
            latest=false
          tags: |
            type=ref,event=branch
            type=sha
            type=pep440,pattern={{version}}
            type=pep440,pattern={{major}}.{{minor}}.{{patch}}
            type=pep440,pattern={{major}}.{{minor}}
            type=pep440,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          platforms: ${{ env.IMAGE_PLATFORMS }}
          context: .
          file: Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
